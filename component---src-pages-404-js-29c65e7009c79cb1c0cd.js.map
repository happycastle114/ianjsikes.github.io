{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Layout","render","header","_this$props","this","props","location","title","children","pathname","react_default","a","createElement","style","marginTop","gatsby_browser_entry","boxShadow","textDecoration","color","to","fontFamily","margin","maxWidth","React","Component","NotFoundPage","siteTitle","data","site","siteMetadata","layout","seo","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-29c65e7009c79cb1c0cd.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          margin: `3rem auto`,\n          maxWidth: 800,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>This is not the page you are looking for...</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}